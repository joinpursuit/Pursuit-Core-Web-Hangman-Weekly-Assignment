{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./Board.js","webpack:///./Game.js","webpack:///./Guesser.js","webpack:///./Referee.js","webpack:///./View.js","webpack:///./dictionary.js","webpack:///./index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEe,oEAAK,EAAC;;;;;;;;;;;;;;;;;;;;;AC5BrB;AAAA;AAAA;AAA+B;AAC/B;AACmC;AACnC,UAAU,YAAY;AACtB;;AAEA;AACA;AACA;AACA,4BAA4B,mDAAO;AACnC,yBAAyB,iDAAK;AAC9B,kC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA,oCAAoC,sBAAsB;AAC1D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;;;;ACpEpB;AAAA;AACA;AACA;AACA;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;;ACNvB;AAAA,OAAO,WAAW,GAAG,mBAAO,CAAC,wCAAiB,E;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;AACA,K;AACA;;AAEe,sEAAO,EAAC;;;;;;;;;;;;;;;;ACvBvB;AAAA;AAAA;AAA6B;AACM;;AAEnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8EAA8E,4BAA4B;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,gDAAI,KAAK,mDAAO;AAC3C;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,WAAW;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mEAAmE,eAAe;AAClF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,2BAA2B;AAC7F,SAAS;AACT;AACA;AACA,sEAAsE,2BAA2B;AACjG,SAAS;AACT;AACA;AACA;AACA;;;AAGA;;AAEe,mEAAI,E;;;;;;;;;;;AC/JnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,Y;;;;;;;;;;;;;ACvElB;AAAA;AAAA;AAAA;AAA6B;AACM;AACN;;;AAG7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gDAAI,KAAK,mDAAO;AACvC;AACA,YAAY,gDAAI;AAChB,KAAK;AACL,CAAC,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","class Board {\n    constructor(length){\n        this.board = new Array(length).fill(\"_\")\n    }\n    \n    addChar(word, letter) {\n        for(let i = 0; i < word.length; i++){\n            if(word[i] === letter){\n                this.board[i] = letter;\n            }\n        }\n    }\n    \n    isComplete(word){\n        if(this.board.join(\"\") === word){\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    displayBoard(){\n        let currentBoard = this.board.join(\" \");\n        return currentBoard;\n    }\n\n}\n\nexport default Board;\n\n \n\n\n\n\n\n\n","import Board from \"./Board.js\";\n// import Guesser from \"./Guesser.js\"\nimport Referee from \"./Referee.js\";\n// const {hangManPics} = require(\"./hangmanPics\");\n// const readline = require(\"readline-sync\");\n\nclass Game {\n    constructor(player){\n        this.player = player;\n        this.computer = new Referee();\n        this.board = new Board(this.computer.secretWordLength());\n        this.guessesRemaining = 6;  \n        this.guessedAlready = [];\n    }\n\n    isValidGuess (guess){\n        let alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n        let valid = false;\n        if(alphabet.includes(guess) && !this.guessedAlready.includes(guess)){\n            valid = true;\n        }\n        return valid;\n    }\n\n    isGameOver(){\n        return this.guessesRemaining > 0 && !this.board.isComplete(this.computer.word)\n\n    }\n    \n    play() {\n        console.clear();\n        console.log(`WELCOME to HANGMAN ${this.player.name}!`);\n        // sees if game is over\n        while(!this.isGameOver()){\n            console.log(hangManPics[this.guessesRemaining]);\n            this.board.displayBoard();\n            console.log(`You have ${this.guessesRemaining} guesses left.`);\n            console.log(\"Letters already used: \", this.guessedAlready.join(\", \"))\n            let guess = this.player.getGuess();\n\n            // sees if letter has been used\n            while(this.guessedAlready.includes(guess)){\n                guess = readline.question(\"You already used that letter. Please try another unique letter: \")\n            }\n            \n            // sees if letter is valid, if it is - push letter into guessedAlready, add to board, decrement guessesRemaining\n            if(this.isValidGuess(guess) && !this.computer.word.includes(guess)){\n                this.guessedAlready.push(guess);\n                this.guessesRemaining -= 1;\n            } else if(this.isValidGuess(guess)){\n                this.guessedAlready.push(guess)\n                this.board.addChar(this.computer.word, guess);\n            } else{\n                guess = readline.question(\"Please enter a valid letter: \")\n            }\n            console.clear();\n        }\n        \n        if(this.guessesRemaining){\n            console.log(this.computer.reveal());\n            console.log(\"You win hangman! Congratulations!\");\n        } else {\n            console.log(\"You ran out of guesses! You lose! This was the word: \")\n            console.log(this.computer.reveal());\n        }\n    }\n}\n\nexport default Game;\n\n\n\n","class Guesser {\n    constructor(name) {\n        this.name = name;\n    }\n}\n\nexport default Guesser;\n\n","const {dictionary} = require('./dictionary.js');  \n\nclass Referee {\n    constructor(referee){\n        this.referee = referee;\n        this.word = dictionary[(Math.floor(Math.random() * dictionary.length))];\n    }\n\n    secretWordLength(){\n        let secretWord = this.word;\n        return secretWord.length;\n    }\n\n    reveal(){\n        let revealStr = [];\n        for(let i = 0; i < this.word.length; i++){\n            revealStr.push(this.word[i]);\n        }\n        let currentBoard = revealStr.join(\" \");\n        return currentBoard;\n    }  \n}\n\nexport default Referee;\n\n \n\n","import Game from \"./Game.js\";\nimport Guesser from \"./Guesser.js\";\n\nclass View {\n    constructor(game, el){\n        this.game = game;\n        this.el = el;\n        this.play();\n    }\n\n    play(){\n        if(this.game.isGameOver()){\n            this.displayBoard();\n            this.displayGuessed();\n            this.displayImgs(this.game.guessesRemaining);\n            this.bindEvents();\n        } else if(this.game.board.isComplete(this.game.computer.word)){\n            this.displayBoard();\n            this.removeItems();\n            this.end(); \n        } else {\n            this.displayBoard();\n            this.removeItems();\n            this.end();\n        }\n    }\n\n    end() {\n        if(this.game.board.isComplete(this.game.computer.word)){\n            let h2 = document.createElement(\"h2\");\n            h2.innerText = \"You won hangman! Congratulations winner!\";\n            let boardDiv = document.querySelector(\"div\");\n            boardDiv.appendChild(h2);\n            let playAgainBtn = document.createElement(\"button\");\n            playAgainBtn.innerText = \"Play again?\"\n            playAgainBtn.id = \"playagain\";\n            let winnerImg = document.createElement(\"img\");\n            winnerImg.src = \"./extraStuff/winnerImage.gif\";\n            winnerImg.id = \"winnerImg\";\n            boardDiv.appendChild(winnerImg);\n            boardDiv.appendChild(playAgainBtn);\n            this.newGame();\n        } else {\n            let h2 = document.createElement(\"h2\");\n            h2.innerText = `You ran out of guesses! You lose! The word was: ${this.game.computer.reveal()}`;\n            let boardDiv = document.querySelector(\"div\");\n            boardDiv.appendChild(h2);\n            let playAgainBtn = document.createElement(\"button\");\n            playAgainBtn.innerText = \"Play again?\"\n            playAgainBtn.id = \"playagain\";\n            let loserImg = document.createElement(\"img\");\n            loserImg.src = \"./extraStuff/loserImage.gif\";\n            loserImg.id = \"loserImg\";\n            boardDiv.appendChild(loserImg);\n            boardDiv.appendChild(playAgainBtn);\n            this.newGame();\n        }\n    }\n\n    newGame(){\n        let playAgain = document.querySelector(\"#playagain\")\n        playAgain.addEventListener(\"click\", () => {\n            playAgain.parentNode.removeChild(playAgain);\n            let game = new Game(new Guesser(\"contestant\"));\n            let el = document.querySelector(\"#hm\");\n            new View(game,el);\n        })\n    }\n\n    removeItems(){\n        let p1 = document.querySelector(\"#enterGuess\");\n        p1.parentNode.removeChild(p1);\n        let p2 = document.querySelector(\"#guessedAlready\");\n        p2.parentNode.removeChild(p2);\n        let input = document.querySelector(\"#letterInput\");\n        input.parentNode.removeChild(input);\n        let btn = document.querySelector(\"#submitBtn\");\n        btn.parentNode.removeChild(btn);\n        let h4 = document.querySelector(\"#guessesRemaining\");\n        document.body.removeChild(h4)\n    }\n\n    displayImgs(numGuesses){\n        let imgDiv = document.createElement(\"div\");\n        let img = document.createElement(\"img\");\n        let newSrc = `./images/hangman${numGuesses}.jpg`;\n        img.src = newSrc;\n\n        imgDiv.appendChild(img);\n        this.el.prepend(imgDiv);\n    }\n\n    displayBoard(){\n        this.el.innerHTML = \"\";\n        let boardDiv = document.createElement(\"div\");\n        let currentBoard = this.game.board.displayBoard();\n        let h1 = document.createElement(\"h1\")\n        h1.innerText = currentBoard;\n\n        let h4 = document.createElement(\"h4\");\n        h4.id=\"guessesRemaining\"\n        document.body.appendChild(h4)\n\n        let p = document.createElement(\"p\");\n        p.id=\"enterGuess\";\n        p.innerText = \"Please enter a letter:\"\n        let guessed= document.createElement(\"p\");\n        guessed.id=\"guessedAlready\";\n        let input = document.createElement(\"input\");\n        input.id =\"letterInput\";\n        let form = document.createElement(\"form\");\n        let button = document.createElement(\"button\");\n        button.id=\"submitBtn\"\n        button.innerText = \"Submit\";\n        form.appendChild(input);\n        form.appendChild(button);\n\n        boardDiv.appendChild(h1);\n        boardDiv.appendChild(guessed);\n        boardDiv.appendChild(p);\n        boardDiv.appendChild(form);\n        this.el.appendChild(boardDiv);\n    }\n\n    bindEvents(){\n        let button = document.querySelector(\"#submitBtn\");\n        button.addEventListener(\"click\", () => this.result());\n    }\n    \n    displayGuessed(){\n        let guessedAlready = document.querySelector(\"#guessedAlready\");\n        if(this.game.guessedAlready.length === 0){\n            guessedAlready.innerText = \"No guesses have been made\";\n        } else {\n            let guessedLetters = this.game.guessedAlready.join(\", \");\n            guessedAlready.innerText = `Letters guessed already: ${guessedLetters}`;\n        }\n    }\n\n    result(){\n        let input = document.querySelector(\"#letterInput\")\n        let h4 = document.querySelector(\"#guessesRemaining\")\n        if(this.game.isValidGuess(input.value.toLowerCase()) && !this.game.computer.word.includes(input.value.toLowerCase())){\n            this.game.guessedAlready.push(input.value.toLowerCase());\n            this.game.guessesRemaining -= 1;\n            h4.innerText = `Incorrect guess! Guesses remaining: ${this.game.guessesRemaining}`;\n        } else if(this.game.isValidGuess(input.value.toLowerCase())){\n            this.game.guessedAlready.push(input.value.toLowerCase());\n            this.game.board.addChar(this.game.computer.word, input.value.toLowerCase());\n            h4.innerText = `Correct guess! Nice! Guesses remaining: ${this.game.guessesRemaining}`;\n        } else {\n            h4.innerText = \"Please enter a valid letter!! \" + \"Guesses Remaining: \" + this.game.guessesRemaining;\n        }\n        this.play();\n    }\n\n\n}\n\nexport default View;","// All Words in dictionary\n\nconst  dictionary = [\"able\", \"about\", \"account\", \"acid\", \"across\", \"addition\", \"adjustment\",\n\"advertisement\", \"after\", \"again\", \"against\", \"agreement\", \"almost\", \"among\", \"amount\", \"amusement\", \n\"angle\", \"angry\", \"animal\", \"answer\", \"apparatus\", \"apple\", \"approval\", \"arch\", \"argument\", \"army\", \n\"attack\", \"attempt\", \"attention\", \"attraction\", \"authority\", \"automatic\", \"awake\", \"baby\", \"back\", \"balance\",\n\"ball\", \"band\", \"base\", \"basin\", \"basket\", \"bath\", \"beautiful\", \"because\", \"before\", \"behaviour\", \n\"belief\", \"bell\", \"bent\", \"berry\", \"between\", \"bird\", \"birth\", \"bite\", \"bitter\", \"black\", \n\"blade\", \"blood\", \"blow\", \"blue\", \"board\", \"boat\", \"body\", \"boiling\", \"bone\", \"book\", \"boot\",\n\"bottle\", \"brain\", \"brake\", \"branch\", \"brass\", \"bread\", \"breath\", \"brick\", \"bridge\", \"bright\", \n\"broken\", \"brother\", \"brown\", \"brush\", \"bucket\", \"building\", \"bulb\", \"burn\", \"burst\", \"business\", \n\"butter\", \"button\", \"cake\", \"camera\", \"canvas\", \"card\", \"care\", \"carriage\", \"cart\", \"cause\", \"certain\", \n\"chain\", \"chalk\", \"chance\", \"change\", \"cheap\", \"cheese\", \"chemical\", \"chest\", \"chief\", \"chin\", \"church\",\n\"circle\", \"clean\", \"clear\", \"clock\", \"cloth\", \"cloud\", \"coal\", \"coat\", \"cold\", \"collar\", \"colour\", \"comb\",\n\"come\", \"comfort\", \"committee\", \"common\", \"company\", \"comparison\", \"competition\", \"complete\", \"complex\",\n\"condition\", \"connection\", \"conscious\", \"control\", \"cook\", \"copper\", \"copy\", \"cord\", \"cork\", \"cotton\", \n\"cough\", \"country\", \"cover\", \"crack\", \"credit\", \"crime\", \"cruel\", \"crush\", \"current\", \"curtain\", \"curve\",\n\"cushion\", \"damage\", \"danger\", \"dark\", \"daughter\", \"dead\", \"dear\", \"death\", \"debt\", \"decision\", \"deep\", \n\"degree\", \"delicate\", \"dependent\", \"design\", \"desire\", \"destruction\", \"detail\", \"development\", \"different\", \n\"digestion\", \"direction\", \"dirty\", \"discovery\", \"discussion\", \"disease\", \"disgust\", \"distance\", \n\"distribution\", \"division\", \"door\", \"doubt\", \"down\", \"drain\", \"drawer\", \"dress\", \"drink\", \"driving\", \n\"drop\", \"dust\", \"early\", \"earth\", \"east\", \"edge\", \"education\", \"effect\", \"elastic\", \"electric\", \"engine\", \n\"enough\", \"equal\", \"error\", \"even\", \"event\", \"ever\", \"every\", \"example\", \"exchange\", \"existence\", \"expansion\", \n\"experience\", \"expert\", \"face\", \"fact\", \"fall\", \"false\", \"family\", \"farm\", \"father\", \"fear\", \"feather\", \n\"feeble\", \"feeling\", \"female\", \"fertile\", \"fiction\", \"field\", \"fight\", \"finger\", \"fire\", \"first\", \n\"fish\", \"fixed\", \"flag\", \"flame\", \"flat\", \"flight\", \"floor\", \"flower\", \"fold\", \"food\", \"foolish\", \n\"foot\", \"force\", \"fork\", \"form\", \"forward\", \"fowl\", \"frame\", \"free\", \"frequent\", \"friend\", \"from\", \n\"front\", \"fruit\", \"full\", \"future\", \"garden\", \"general\", \"girl\", \"give\", \"glass\", \"glove\", \"goat\", \"gold\",\n\"good\", \"government\", \"grain\", \"grass\", \"great\", \"green\", \"grey\", \"grip\", \"group\", \"growth\", \"guide\", \"hair\", \n\"hammer\", \"hand\", \"hanging\", \"happy\", \"harbour\", \"hard\", \"harmony\", \"hate\", \"have\", \"head\", \"healthy\", \"hear\", \n\"hearing\", \"heart\", \"heat\", \"help\", \"high\", \"history\", \"hole\", \"hollow\", \"hook\", \"hope\", \"horn\", \"horse\", \n\"hospital\", \"hour\", \"house\", \"humour\", \"idea\", \"important\", \"impulse\", \"increase\", \"industry\", \"insect\", \n\"instrument\", \"insurance\", \"interest\", \"invention\", \"iron\", \"island\", \"jelly\", \"jewel\", \"join\", \"journey\", \n\"judge\", \"jump\", \"keep\", \"kettle\", \"kick\", \"kind\", \"kiss\", \"knee\", \"knife\", \"knot\", \"knowledge\", \"land\",\n\"language\", \"last\", \"late\", \"laugh\", \"lead\", \"leaf\", \"learning\", \"leather\", \"left\", \"letter\", \"level\", \n\"library\", \"lift\", \"light\", \"like\", \"limit\", \"line\", \"linen\", \"liquid\", \"list\", \"little\", \"living\", \"lock\", \n\"long\", \"look\", \"loose\", \"loss\", \"loud\", \"love\", \"machine\", \"make\", \"male\", \"manager\", \"mark\", \"market\", \n\"married\", \"mass\", \"match\", \"material\", \"meal\", \"measure\", \"meat\", \"medical\", \"meeting\", \"memory\", \"metal\", \n\"middle\", \"military\", \"milk\", \"mind\", \"mine\", \"minute\", \"mist\", \"mixed\", \"money\", \"monkey\", \"month\", \"moon\",\n\"morning\", \"mother\", \"motion\", \"mountain\", \"mouth\", \"move\", \"much\", \"muscle\", \"music\", \"nail\", \"name\",\n\"narrow\", \"nation\", \"natural\", \"near\", \"necessary\", \"neck\", \"need\", \"needle\", \"nerve\", \"news\", \"night\",\n\"noise\", \"normal\", \"north\", \"nose\", \"note\", \"number\", \"observation\", \"offer\", \"office\", \"only\", \"open\", \n\"operation\", \"opinion\", \"opposite\", \"orange\", \"order\", \"organization\", \"ornament\", \"other\", \"oven\", \"over\", \n\"owner\", \"page\", \"pain\", \"paint\", \"paper\", \"parallel\", \"parcel\", \"part\", \"past\", \"paste\", \"payment\", \"peace\", \n\"pencil\", \"person\", \"physical\", \"picture\", \"pipe\", \"place\", \"plane\", \"plant\", \"plate\", \"play\", \"please\", \"pleasure\", \n\"plough\", \"pocket\", \"point\", \"poison\", \"polish\", \"political\", \"poor\", \"porter\", \"position\", \"possible\", \"potato\", \n\"powder\", \"power\", \"present\", \"price\", \"print\", \"prison\", \"private\", \"probable\", \"process\", \"produce\", \"profit\", \n\"property\", \"prose\", \"protest\", \"public\", \"pull\", \"pump\", \"punishment\", \"purpose\", \"push\", \"quality\", \"question\", \n\"quick\", \"quiet\", \"quite\", \"rail\", \"rain\", \"range\", \"rate\", \"reaction\", \"reading\", \"ready\", \"reason\", \"receipt\", \n\"record\", \"regret\", \"regular\", \"relation\", \"religion\", \"representative\", \"request\", \"respect\", \"responsible\", \n\"rest\", \"reward\", \"rhythm\", \"rice\", \"right\", \"ring\", \"river\", \"road\", \"roll\", \"roof\", \"room\", \"root\", \"rough\", \n\"round\", \"rule\", \"safe\", \"sail\", \"salt\", \"same\", \"sand\", \"scale\", \"school\", \"science\", \"scissors\", \"screw\", \n\"seat\", \"second\", \"secret\", \"secretary\", \"seed\", \"seem\", \"selection\", \"self\", \"send\", \"sense\", \"separate\", \n\"serious\", \"servant\", \"shade\", \"shake\", \"shame\", \"sharp\", \"sheep\", \"shelf\", \"ship\", \"shirt\", \"shock\", \"shoe\", \n\"short\", \"shut\", \"side\", \"sign\", \"silk\", \"silver\", \"simple\", \"sister\", \"size\", \"skin\", \"skirt\", \"sleep\", \n\"slip\", \"slope\", \"slow\", \"small\", \"smash\", \"smell\", \"smile\", \"smoke\", \"smooth\", \"snake\", \"sneeze\", \"snow\", \n\"soap\", \"society\", \"sock\", \"soft\", \"solid\", \"some\", \"song\", \"sort\", \"sound\", \"soup\", \"south\", \"space\", \n\"spade\", \"special\", \"sponge\", \"spoon\", \"spring\", \"square\", \"stage\", \"stamp\", \"star\", \"start\", \"statement\", \n\"station\", \"steam\", \"steel\", \"stem\", \"step\", \"stick\", \"sticky\", \"stiff\", \"still\", \"stitch\", \"stocking\", \n\"stomach\", \"stone\", \"stop\", \"store\", \"story\", \"straight\", \"strange\", \"street\", \"stretch\", \"strong\", \n\"structure\", \"substance\", \"such\", \"sudden\", \"sugar\", \"suggestion\", \"summer\", \"support\", \"surprise\", \n\"sweet\", \"swim\", \"system\", \"table\", \"tail\", \"take\", \"talk\", \"tall\", \"taste\", \"teaching\", \"tendency\", \n\"test\", \"than\", \"that\", \"then\", \"theory\", \"there\", \"thick\", \"thin\", \"thing\", \"this\", \"thought\", \"thread\", \n\"throat\", \"through\", \"through\", \"thumb\", \"thunder\", \"ticket\", \"tight\", \"till\", \"time\", \"tired\", \"together\", \n\"tomorrow\", \"tongue\", \"tooth\", \"touch\", \"town\", \"trade\", \"train\", \"transport\", \"tray\", \"tree\", \"trick\", \n\"trouble\", \"trousers\", \"true\", \"turn\", \"twist\", \"umbrella\", \"under\", \"unit\", \"value\", \"verse\", \"very\", \n\"vessel\", \"view\", \"violent\", \"voice\", \"waiting\", \"walk\", \"wall\", \"warm\", \"wash\", \"waste\", \"watch\", \"water\", \n\"wave\", \"weather\", \"week\", \"weight\", \"well\", \"west\", \"wheel\", \"when\", \"where\", \"while\", \"whip\", \"whistle\", \n\"white\", \"wide\", \"will\", \"wind\", \"window\", \"wine\", \"wing\", \"winter\", \"wire\", \"wise\", \"with\", \"woman\", \"wood\", \n\"wool\", \"word\", \"work\", \"worm\", \"wound\", \"writing\", \"wrong\", \"year\", \"yellow\", \"yesterday\", \"young\"];\n\nmodule.exports = {dictionary}; \n","import Game from \"./Game.js\";\nimport Guesser from \"./Guesser.js\";\nimport View from \"./View.js\";\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    let startImg = document.createElement(\"img\");\n    startImg.src = \"./extraStuff/startImg.gif\";\n    startImg.id = \"startImg\";\n    document.body.appendChild(startImg);\n    let start = document.createElement(\"button\");\n    start.innerText = \"START\"\n    start.id = \"startBtn\";\n\n    document.body.appendChild(start);\n    start.addEventListener(\"click\", () => {\n        document.getElementById(\"music\").play();\n        document.body.removeChild(startImg);\n        document.body.removeChild(start);\n        let game = new Game(new Guesser(\"contestant\"));\n        let el = document.querySelector(\"#hm\");\n        new View(game,el);\n    })\n})"],"sourceRoot":""}